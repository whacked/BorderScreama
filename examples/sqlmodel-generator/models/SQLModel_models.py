from typing import List, Optional
from sqlmodel import Field, Relationship, Session, SQLModel, create_engine


# generated by datamodel-codegen:
#   filename:  schemas/timestamped-record.schema.json
#   timestamp: 2023-07-02T16:45:33+00:00
class TimestampedRecord(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    record: str = Field(..., description='serialized JSON (from any type in schema)')
    timestampSeconds: float

    device_id: Optional[int] = Field(default=None, foreign_key="device.id")
    versionedSchema_id: Optional[int] = Field(default=None, foreign_key="versionedschema.id")

# generated by datamodel-codegen:
#   filename:  schemas/device.schema.json
#   timestamp: 2023-07-02T16:45:33+00:00
class Device(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    name: str
    properties: Optional[str] = Field(
        None, description='serialized JSON (from any type in schema)'
    )



# generated by datamodel-codegen:
#   filename:  schemas/versioned-schema.schema.json
#   timestamp: 2023-07-02T16:45:33+00:00
class VersionedSchema(SQLModel, table=True):
    content: str
    id: Optional[int] = Field(default=None, primary_key=True)
    parents: Optional[str] = Field(
        None, description='serialized JSON (from any type in schema)'
    )
    sha256: Optional[str] = None
    transformerCode: Optional[str] = None



